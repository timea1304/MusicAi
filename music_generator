import pickle
from music21 import instrument, note, chord, stream
class Music_Generator:
    #sl = sequence_length, gnc=generated_notes_count
    def __init__(self,sequence_length, generated_notes_count):
        self.midifolder = midifolder
        self.sequence_length = sequence_length
        self.generated_notes_count = generated_notes_count
        self.generated_notes = []
        
    
        
        with open("notes.pkl", "rb") as file:
            self.notes = pickle.load(file)


    def prediction_range():
        start = np.random.randing(0,len(Music_Generator.notes) - sequence_len)
        for i in range(Music_Generator.generated notes_count):
            prediction_input = np.reshape(pattern,(1, sequence_le))

    def create_midi_from_notes( output_file ="generated_music3.midi")
        midi_stream = stream.Stream()
        
        for element in Music_Generator.notes:
            if '.' in element or element.isdigit():
                chord_notes = element.split('.')
                chord_notes = [note.Note(int(n)) for n in  chord_notes]
                for chord_note in chord_notes:
                    chord_note.storedInstrument = instrument.Piano()
                new_chord = chord.Chord(chord_notes)
                midi_stream.append(new_chord)
            else:
                new_note = note.Note(element)
                new_note.storedInstrument = instrument.Piano()
                midi_stream.append(new_note)
        midi_stream.write("midi", fp=output_file)
                

    